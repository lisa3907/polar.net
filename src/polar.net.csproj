<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Target Framework -->
		<TargetFrameworks>netstandard2.0;netstandard2.1;net8.0;net9.0</TargetFrameworks>
		<LangVersion>latest</LangVersion>

		<!-- Assembly Information -->
		<AssemblyName>PolarNet</AssemblyName>
		<RootNamespace>PolarNet</RootNamespace>

		<!-- Versioning -->
		<Version>1.0.1</Version>
		<AssemblyVersion>1.0.1.0</AssemblyVersion>
		<FileVersion>1.0.1.0</FileVersion>

		<!-- Package Information -->
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<PackageId>PolarNet</PackageId>
		<Authors>SEONGAHN LEE</Authors>
		<Product>PolarNet</Product>
		<Company>ODINSOFT</Company>
		<Title>PolarNet — Thin client library for Polar API for .NET</Title>
		<Description>Thin C# client library for Polar API (https://docs.polar.sh/). Supports sandbox and production with simple, typed access.</Description>
		<Copyright>Copyright OdinSoft Co., Ltd. 2015~2025</Copyright>

		<!-- Package Settings -->
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
		<PackageProjectUrl>https://github.com/lisa3907/polar.net</PackageProjectUrl>
		<PackageIcon>logomark_black.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageTags>polar;payments;subscriptions;api;client</PackageTags>
		<PackageReleaseNotes>PolarNet v1.0.1 — 2025-08-22
This release finalizes the model reorganization, standardizes JSON across the solution, and expands the client with additional API coverage—all without breaking public APIs.

Highlights
One-class-per-file models, organized under Models/{Common, Resources, Requests, CustomerState, Webhooks}
System.Text.Json used uniformly across library, samples, and webhook
Expanded PolarClient endpoints (Prices, Orders, Customer State)
Sample webhook upgraded and aligned to core models
Build and tests verified across all target frameworks
Added
PolarClient:
Prices: GetPriceAsync, ListPricesAsync
Orders: GetOrderAsync (ListOrdersAsync already present)
Customer State: GetCustomerStateAsync
Tests:
URL composition and validation with fake HttpMessageHandler
Config-driven tests reading BaseUrl and OrganizationId
Changed
Models:
Split into per-class files with English XML documentation
Categorized under: Common, Resources, Requests, CustomerState, Webhooks
Legacy root model files excluded from compilation
Webhook sample:
Migrated to System.Text.Json
Controllers handle JsonElement payloads
Uses core PolarNet models (removed duplicate sample models)
Configuration:
Console sample, webhook, and tests read BaseUrl/AccessToken/IDs from appsettings.json
Fixed / Cleanup
Resolved duplicate type definitions by excluding root-level model files
Addressed nullable annotations locally in CustomerState models (#nullable enable where needed)
General code comments and docs standardized in English
Breaking Changes
None. Namespaces and type names remain the same; public API is unchanged.
Migration Notes
If you referenced models from the sample webhook project, switch to PolarNet core models.
Ensure appsettings.json provides UseSandbox, SandboxApiUrl, ProductionApiUrl, AccessToken, OrganizationId.
No code changes required for consumers of PolarNet’s public API.
Packaging
NuGet-ready with embedded symbols and metadata; no pack behavior changes in this release.
Thanks for using PolarNet!</PackageReleaseNotes>

		<!-- Repository Information -->
		<RepositoryUrl>https://github.com/lisa3907/polar.net</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>

		<!-- Code Quality Settings - Simplified -->
		<Nullable>disable</Nullable>
		<ImplicitUsings>disable</ImplicitUsings>
		<TreatWarningsAsErrors>false</TreatWarningsAsErrors>

		<!-- Suppress most warnings except critical ones -->
		<NoWarn>$(NoWarn);CS1998;CS0618;CS1591</NoWarn>

		<!-- Build Settings -->
		<Deterministic>true</Deterministic>
		<ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>
		<Platforms>AnyCPU;x64;x86</Platforms>
		<ApplicationIcon>logomark_black.ico</ApplicationIcon>

		<!-- Debugging and Symbols -->
		<DebugType>embedded</DebugType>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
	</PropertyGroup>

	<!-- Package Files -->
	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="\" />
		<None Include="..\LICENSE.md" Pack="true" PackagePath="\" />
		<None Include="..\docs\logo-files\logomark_black.png" Pack="true" PackagePath="\" />
		<Content Include="..\LICENSE.md" Link="LICENSE.md" />
		<Content Include="logomark_black.ico" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
		<PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
		<PackageReference Include="System.Net.Http" Version="4.3.4" />
	</ItemGroup>

</Project>
