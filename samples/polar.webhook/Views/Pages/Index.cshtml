@{
    ViewData["Title"] = "Polar Payment Test";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        h1 {
            text-align: center;
            color: white;
            margin-bottom: 40px;
            font-size: 2.5rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }
        
        .error-message {
            background: #ff6b6b;
            color: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }
        
        .product-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.2);
        }
        
        .product-name {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }
        
        .product-description {
            color: #666;
            margin-bottom: 20px;
            line-height: 1.6;
        }
        
        .product-prices {
            border-top: 1px solid #eee;
            padding-top: 15px;
        }
        
        .price-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background: #f8f9fa;
            border-radius: 8px;
            margin-bottom: 10px;
        }
        
        .price-amount {
            font-size: 1.25rem;
            font-weight: bold;
            color: #667eea;
        }
        
        .price-type {
            font-size: 0.875rem;
            color: #999;
            text-transform: uppercase;
        }
        
        .checkout-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        
        .checkout-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .checkout-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .test-form {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            margin-bottom: 40px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        
        .form-input {
            width: 100%;
            padding: 10px;
            border: 2px solid #e0e0e0;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }
        
        .form-input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }
        
        @@keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .no-products {
            text-align: center;
            color: white;
            font-size: 1.25rem;
            padding: 40px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸŽ¯ Polar Sandbox Payment Test</h1>
        
        @if (ViewBag.Error != null)
        {
            <div class="error-message">
                @ViewBag.Error
            </div>
        }
        
        <div class="test-form">
            <h2 style="margin-bottom: 20px; color: #333;">Manual Checkout Test</h2>
            <form id="checkoutForm">
                <div class="form-group">
                    <label class="form-label" for="priceId">Product Price ID</label>
                    <input type="text" id="priceId" class="form-input" placeholder="price_xxx" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="customerEmail">Customer Email (Optional)</label>
                    <input type="email" id="customerEmail" class="form-input" placeholder="customer@example.com">
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="customerName">Customer Name (Optional)</label>
                    <input type="text" id="customerName" class="form-input" placeholder="John Doe">
                </div>
                
                <button type="submit" class="checkout-btn" style="width: 100%;">
                    Create Test Checkout
                </button>
            </form>
        </div>
        
        @if (ViewBag.Products != null && ViewBag.Products.Count > 0)
        {
            <h2 style="color: white; margin-bottom: 20px; text-align: center;">Available Products</h2>
            <div class="products-grid">
                @foreach (var product in ViewBag.Products)
                {
                    <div class="product-card">
                        <div class="product-name">@product.Name</div>
                        <div class="product-description">@(product.Description ?? "No description available")</div>
                        <div class="product-id" style="font-size: 0.75rem; color: #999; margin-bottom: 15px;">
                            ID: @product.Id
                        </div>
                        
                        @if (product.Prices != null && product.Prices.Count > 0)
                        {
                            <div class="product-prices">
                                @foreach (var price in product.Prices)
                                {
                                    <div class="price-item">
                                        <div>
                                            <div class="price-amount">
                                                @(price.PriceAmount / 100.0) @price.PriceCurrency
                                            </div>
                                            <div class="price-type">@price.Type</div>
                                            @if (price.RecurringInterval != null)
                                            {
                                                <div class="price-type">per @price.RecurringInterval</div>
                                            }
                                        </div>
                                        <button class="checkout-btn" onclick="startCheckout('@price.Id')">
                                            Purchase
                                        </button>
                                    </div>
                                    <div style="font-size: 0.75rem; color: #999; margin-top: 5px;">
                                        Price ID: @price.Id
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div style="color: #999;">No prices available</div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-products">
                No products available. Please check your Polar configuration and ensure you have created products in your Polar dashboard.
            </div>
        }
    </div>
    
    <script>
        async function startCheckout(priceId, customerEmail = null, customerName = null) {
            try {
                const button = event.target;
                button.disabled = true;
                button.innerHTML = '<span class="loading"></span> Processing...';
                
                const response = await fetch('/api/polar/checkout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        productPriceId: priceId,
                        customerEmail: customerEmail,
                        customerName: customerName
                    })
                });
                
                if (!response.ok) {
                    throw new Error('Failed to create checkout session');
                }
                
                const data = await response.json();
                
                // Redirect to Polar checkout page
                window.location.href = data.checkoutUrl;
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to start checkout. Please try again.');
                if (event.target) {
                    event.target.disabled = false;
                    event.target.innerHTML = 'Purchase';
                }
            }
        }
        
        document.getElementById('checkoutForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const priceId = document.getElementById('priceId').value;
            const customerEmail = document.getElementById('customerEmail').value;
            const customerName = document.getElementById('customerName').value;
            
            await startCheckout(priceId, customerEmail || null, customerName || null);
        });
    </script>
</body>
</html>